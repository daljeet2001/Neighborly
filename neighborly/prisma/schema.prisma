datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String      @id @default(cuid())
  name           String?
  email          String      @unique
  password       String?
  image          String?
  neighborhoodId String?
  neighborhood   Neighborhood? @relation(fields: [neighborhoodId], references: [id])
  posts          Post[]
  services       Service[]
  messagesSent   Message[]   @relation("sent")
  messagesRecv   Message[]   @relation("recv")
  createdAt      DateTime    @default(now())
}

model Neighborhood {
  id      String  @id @default(cuid())
  name    String  @unique
  city    String?
  pincode String? @unique
  users   User[]
  posts   Post[]
  services Service[]
}

model Post {
  id             String   @id @default(cuid())
  body           String  
  photo          String? 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  likesCount     Int      @default(0) 
  neighborhood   Neighborhood @relation(fields: [neighborhoodId], references: [id])
  neighborhoodId String

  user           User @relation(fields: [userId], references: [id])
  userId         String
}


model Service {
  id             String   @id @default(cuid())
  body           String  
  photo          String?  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  likesCount     Int?     @default(0) 

  neighborhood   Neighborhood @relation(fields: [neighborhoodId], references: [id])
  neighborhoodId String

  user           User @relation(fields: [userId], references: [id])
  userId         String
}


model Message {
  id         String   @id @default(cuid())
  content    String
  sender     User     @relation("sent", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("recv", fields: [receiverId], references: [id])
  receiverId String
  createdAt  DateTime @default(now())
}

